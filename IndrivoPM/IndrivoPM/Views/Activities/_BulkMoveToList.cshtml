@using Bizon360.Models
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@model Gear.ProjectManagement.Manager.Domain.Activities.Commands.BulkActions.MoveActivitiesToList.MoveActivitiesToListCommand
@inject IStringLocalizer Localizer
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig

<form asp-controller="Activities" asp-action="MoveActivitiesToList" id="form-bulk-move-to-list">
    <div class="modal-body">
        <select asp-for="ActivitiesById" multiple hidden>
            @foreach (var activity in Model.ActivitiesById)
            {
                <option value="@activity" selected></option>
            }
        </select>

        <label asp-for="ActivityListId" class="float-label-select"></label>
        <select asp-for="ActivityListId" asp-items="@((List<SelectListItem>) ViewBag.ActivityLists)" class="form-control selectpicker" data-live-search="true"></select>
        <span asp-validation-for="ActivityListId" class="invalid-feedback"></span>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">@Localizer["_cancel"]</button>
        <button type="submit" class="btn btn-success" id="btn-bulk-move-to-list">@Localizer["shortCuts_update"]</button>
    </div>
</form>

@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    $(".selectpicker").selectpicker();

    $.saveChanges({
        bindTo: "#btn-bulk-move-to-list",
        formId: "#form-bulk-move-to-list",
        ajaxUrl: "@Url.Action("MoveActivitiesToList", "Activities")",
        successMessage: "@Localizer["messages_bulkUpdateActivitiesSuccess"]",
        errorMessage: "@Localizer["messages_bulkUpdateActivitiesError"]",
        buttonText: "@Localizer["shortCuts_update"]",
        eventFunction: function (result) {
            if (GetCurrentView() == "@ActivitiesView.List") {
                $.each(result.activities,
                    function(key, value) {
                        var oldId = $("tr[id='entity-" + value + "']").parents(".collapse-datatable").attr("id");
                        oldId = oldId.substring(oldId.indexOf("-") + 1);

                        if (oldId == result.activityListId) {
                            return;
                        } else {
                            var row = $("tr[id='entity-" + value + "']");
                            var newTbody = null;
                            var moveToCompleted = row.parents("tbody").attr("id").startsWith("tbody-comp");

                            if (!moveToCompleted) {
                                newTbody = $("tbody[id='tbody-" + result.activityListId + "']");
                            } else {
                                newTbody = $("tbody[id='tbody-comp-" + result.activityListId + "']");
                            }

                            var newDataTable = newTbody.parents(".bizon-datatable").DataTable();

                            DeleteRowCompleted(value,
                                "@Localizer["messages_noActivities"]",
                                "@Localizer["messages_noOngoingActivities"]");

                            newDataTable.row.add($(row));
                            newTbody.append(row);
                            row.find(".move-to-list-link").attr("data-list-id", result.activityListId);

                            var newCount = $("[id='count-" + result.activityListId + "'].collapse-count");
                            newCount.html(parseInt(newCount.html()) + 1);
                        }
                    });
                } else {
                $.each(result.activities, function(key, value) {
                    $("[data-id='" + value + "'].move-to-list-link").attr("data-list-id", result.activityListId);
                });
            }

            DeselectAll();
        }
    });
</script>