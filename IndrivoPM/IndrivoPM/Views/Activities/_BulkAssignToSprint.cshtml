@using Bizon360.Models
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@model Gear.ProjectManagement.Manager.Domain.Activities.Commands.BulkActions.AssignActivitiesToSprint.AssignActivitiesToSprintCommand
@inject IStringLocalizer Localizer
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig

<form asp-controller="Activities" asp-action="AssignActivitiesToSprint" id="form-bulk-assign-to-sprint">
    <div class="modal-body">
        <select asp-for="ActivitiesById" multiple hidden>
            @foreach (var activity in Model.ActivitiesById)
            {
                <option value="@activity" selected></option>
            }
        </select>

        <label asp-for="SprintId" class="float-label-select"></label>
        <select asp-for="SprintId" asp-items="@((List<SelectListItem>) ViewBag.Sprints)" class="form-control selectpicker" data-live-search="true"></select>
        <span asp-validation-for="SprintId" class="invalid-feedback"></span>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">@Localizer["_cancel"]</button>
        <button type="submit" class="btn btn-success" id="btn-bulk-assign-to-sprint">@Localizer["shortCuts_update"]</button>
    </div>
</form>

@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    $(".selectpicker").selectpicker();

    $.saveChanges({
        bindTo: "#btn-bulk-assign-to-sprint",
        formId: "#form-bulk-assign-to-sprint",
        ajaxUrl: "@Url.Action("AssignActivitiesToSprint", "Activities")",
        successMessage: "@Localizer["messages_bulkUpdateActivitiesSuccess"]",
        errorMessage: "@Localizer["messages_bulkUpdateActivitiesError"]",
        buttonText: "@Localizer["shortCuts_update"]",
        eventFunction: function(result) {
            if (GetCurrentView() == "@ActivitiesView.Sprint") {
                $.each(result.activities,
                    function(key, value) {
                        var oldId = $("tr[id='entity-" + value + "']").parents(".collapse-datatable").attr("id");
                        oldId = oldId.substring(oldId.indexOf("-") + 1);

                        if (oldId == result.sprintId) {
                            return;
                        } else {
                            var row = $(`tr[id='entity-${value}']`);
                            var newTbody = null;
                            var moveToCompleted = row.parents("tbody").attr("id").startsWith("tbody-comp");

                            if (!moveToCompleted) {
                                newTbody = $(`tbody[id='tbody-${result.sprintId}']`);
                            } else {
                                newTbody = $(`tbody[id='tbody-comp-${result.sprintId}']`);
                            }

                            var newDataTable = newTbody.parents(".bizon-datatable").DataTable();

                            DeleteRowCompleted(value,
                                "@Localizer["messages_noActivities"]",
                                "@Localizer["messages_noOngoingActivities"]");

                            newDataTable.row.add($(row));
                            newTbody.append(row);
                            row.find(".assign-to-sprint-link").attr("data-sprint-id", result.sprintId);
                            row.find(".entity-date").html(result.date);
                            row.find(".sprint-badge")
                                .attr("class", row.parents(".collapse-datatable").find(".sprint-badge").attr("class"))
                                .attr("title", result.sprintName);

                            var newCount = $("[id='count-" + result.sprintId + "'].collapse-count");
                            newCount.html(parseInt(newCount.html()) + 1);
                        }
                    });
            } else {
                $.each(result.activities, function(key, value) {
                    $(`[data-id='${value}'].assign-to-sprint-link`).attr("data-sprint-id", result.sprintId);
                });
            }

            DeselectAll();
        }
    });
</script>