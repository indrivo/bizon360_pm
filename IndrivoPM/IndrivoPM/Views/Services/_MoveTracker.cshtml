@model Gear.ProjectManagement.Manager.Domain.TrackerTypes.Commands.MoveTrackerType.MoveTrackerTypeCommand
@inject IStringLocalizer Localizer
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig
@using Bizon360.Models
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options

@if (ViewBag.ActivityTypes == null)
{
    <p class=" p-3">@Localizer["msg_noActivityTypes"]</p>
}
else
{
    <form id="form">
        <div class="modal-body">
            <div class="row">
                <div class="col-md-12">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    @foreach (var item in Model.TrackersIds)
                    {
                        <input asp-for="TrackersIds" value="@item" hidden />
                    }

                    <div class="mb-2">
                        <label asp-for="ActivityTypeId" class="float-label-select"></label>
                        <select asp-for="ActivityTypeId" asp-items="@(new SelectList(ViewBag.ActivityTypes, "Id", "Name", null))" class="form-control selectpicker" data-live-search="true">
                        </select>
                        <span asp-validation-for="ActivityTypeId" class="invalid-feedback"></span>
                    </div>
                </div>

            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">@Localizer["_cancel"]</button>
            <button type="submit" class="btn btn-success" id="btn">@Localizer["_move"]</button>
        </div>
    </form>
}

<script>
    $(document).ready(function () {
         $(".selectpicker").selectpicker();
         var services = new ServicesContainer();

         $.saveChanges({
             bindTo: "#btn",
             formId: "#form",
             ajaxUrl: "@Url.Action("MoveTracker", "Services")",
             successMessage: "@Localizer["msgSuccess_moveSubtype"]",
             errorMessage: "@Localizer["msgError_moveSubtype"]",
             eventFunction: services.getServices
         });
    });
</script>