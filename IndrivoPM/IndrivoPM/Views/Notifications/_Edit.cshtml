@model Gear.Manager.Core.EntityServices.Notifications.Commands.UpdateNotificationProfile.UpdateNotificationProfileCommand
@inject IStringLocalizer Localizer
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig
@using Bizon360.Models
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options

<form id="form-edit">
    <div class="modal-body">
        <div class="row">
            <div class="col-md-12">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="Id" hidden/>
                @Html.AntiForgeryToken()

                <div class="mb-2">
                    <label asp-for="Name" class="float-label"></label>
                    <input asp-for="Name" class="form-control" placeholder="@Localizer["placeholders_profileName"]" autofocus="autofocus" autocomplete="off" required/>
                    <span asp-validation-for="Name" class="invalid-feedback"></span>
                </div>

                <div class="mb-2">
                    <label asp-for="UserList" class="float-label-select"></label>
                    <select asp-for="UserList" asp-items="@((List<SelectListItem>) ViewBag.ApplicationUsers)"
                            class="form-control selectpicker" data-live-search="true">
                    </select>
                    <span asp-validation-for="UserList" class="invalid-feedback"></span>
                </div>

                <div class="mb-2">
                    <label class="float-label-select">Project notifications</label>
                    <select asp-for="EventList" asp-items="@(new SelectList(ViewBag.ProjectEvents, "Id", "EventDescription", null))" class="form-control selectpicker" data-live-search="true">
                    </select>
                    <span asp-validation-for="EventList" class="invalid-feedback"></span>
                </div>

                <div class="mb-2">
                    <label class="float-label-select">Activity notifications</label>
                    <select asp-for="EventList" asp-items="@(new SelectList(ViewBag.ActivityEvents, "Id", "EventDescription", null))" class="form-control selectpicker" data-live-search="true">
                    </select>
                    <span asp-validation-for="EventList" class="invalid-feedback"></span>
                </div>

                <div class="mb-2">
                    <label class="float-label-select">Sprint notifications</label>
                    <select asp-for="EventList" asp-items="@(new SelectList(ViewBag.SprintEvents, "Id", "EventDescription", null))" class="form-control selectpicker" data-live-search="true">
                    </select>
                    <span asp-validation-for="EventList" class="invalid-feedback"></span>
                </div>

                <div class="mb-2">
                    <label class="float-label-select">Administration notifications</label>
                    <select asp-for="EventList" asp-items="@(new SelectList(ViewBag.AdmEvents, "Id", "EventDescription", null))" class="form-control selectpicker" data-live-search="true">
                    </select>
                    <span asp-validation-for="EventList" class="invalid-feedback"></span>
                </div>

            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">@Localizer["_cancel"]</button>
        <button type="submit" class="btn btn-success" id="btn-edit">@Localizer["_update"]</button>
    </div>
</form>

@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    $(".selectpicker").selectpicker();

    $.saveChanges({
        bindTo: "#btn-edit",
        formId: "#form-edit",
        ajaxUrl: "@Url.Action("Edit", "Notifications")",
        successMessage: "@Localizer["msgSuccess_editNotificationProfile"]",
        errorMessage: "@Localizer["msgError_editNotificationProfile"]",
        eventFunction: function() {

            if (!window.location.pathname.includes("Details")) {
                GetEntityList("/Notifications/GetNotificationList", "#entities");
            } else {
                setTimeout(function() { window.location.href = "/Notifications/Details/@Model.Id"; }, 800);
            }
        }
    });

</script>