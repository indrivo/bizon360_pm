@model Gear.Manager.Core.EntityServices.Reports.Queries.Filters.GetProjectGroupsFiltersReport.ProjectGroupFilteredReportListViewModel
@using Bizon360.Models
@using Gear.Manager.Core.EntityServices.Reports.Enums
@using Microsoft.Extensions.Localization
@using Microsoft.Extensions.Options
@inject IStringLocalizer Localizer
@inject IOptionsSnapshot<LocalizationConfigModel> LocalizationConfig

<table id="history-report" class="table bizon-datatable no-parent dt-logged-time" data-order='[[ 1, "asc" ]]'>
    <thead>
        <tr class="hover-invisible-toggle">
            <th class="no-sort" style="width: 30px">#</th>
            <th class="col-date d-md-table-cell" style="width: 70px">@Localizer["_projectGroup"]</th>
            <th class="col-date d-md-table-cell" style="width: 70px">@Localizer["_project"]</th>
            <th class="col-date d-md-table-cell" style="width: 70px">@Localizer["_assignees"]</th>
            @{
                var startInterval = (int)Math.Ceiling((12 * Model.StartDate.Year + Model.StartDate.Month) / ((float)Model.IntervalType));
                var endInclusiveInterval = (int)Math.Ceiling((12 * Model.DueDate.Year + Model.DueDate.Month) / ((float)Model.IntervalType));

                for (var intervalOrder = startInterval - 1; intervalOrder++ < endInclusiveInterval;)
                {
                    var intervalName = $"{(intervalOrder - 1) * (int) Model.IntervalType / 12} Year, " + (Model.IntervalType != Interval.Year ?
                        $"{Math.Ceiling(intervalOrder % (12 / (int) Model.IntervalType) == 0 ? (12 / (float) Model.IntervalType) : intervalOrder % (12 / (int) Model.IntervalType) * 1.0f)} {Model.IntervalType.ToString()}"
                        : string.Empty);
                    <th class="col-date d-md-table-cell" style="width: 40px">@intervalName</th>
                }
            }
            <th class="col-date d-md-table-cell" style="width: 50px">@Localizer["_total"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var projectGroup in Model.ProjectGroups.OrderBy(x => x.ProjectGroupName))
        {
            foreach (var project in projectGroup.ProjectView.Projects)
            {
                foreach (var assignee in project.AssigneeView.Assignees)
                {

                    <tr class="hover-invisible-toggle">
                        <td></td>
                        <td class="d-md-table-cell">@projectGroup.ProjectGroupName</td>
                        <td class="d-md-table-cell"><a href="@Url.Action("Details", "Projects", new { id = project.ProjectId })">@project.ProjectName</a></td>
                        <td class="d-md-table-cell"><a href="@Url.Action("Details", "ApplicationUsers", new { id = assignee.AssigneeId })">@assignee.AssigneeName</a></td>
                        @{
                            for(var interval = startInterval; interval <= endInclusiveInterval; interval++)
                            {
                                var loggedTime = assignee.LoggedTimeView.LoggedTimes?.FirstOrDefault(x => x.Key == interval);
                                if (loggedTime.HasValue && Math.Abs(loggedTime.Value.Value) >= 0.01)
                                {
                                    var keyValuePair = loggedTime.Value;
                                    <td class="d-md-table-cell">@keyValuePair.Value</td>
                                }
                                else
                                {
                                    <td class="d-md-table-cell">-</td>
                                }
                            }
                        }
                        <td class="d-md-table-cell">@assignee.LoggedTimeView.TotalLoggedTime.ToString("N")h</td>
                    </tr>
                }
            }
        }
    </tbody>
    <tfoot>
        <tr class="hover-invisible-toggle">
            <td></td>
            <td class="font-size-14 font-weight-600 px-0 py-1">@Localizer["_total"]</td>
            <td class="font-size-14 d-sm-table-cell font-weight-600 px-0 py-1">@Model.TotalLoggedTime.ToString("N")h</td>
        </tr>
    </tfoot>
</table>

<script>
    EnableDataTable(".bizon-datatable", null, true, 0);
</script>

<script>
    $(document).ready(function() {
        checkHeaders();
    });
</script>
